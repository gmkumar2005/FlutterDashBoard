{
  "uuid": "f137829e-422c-4005-881e-ca37df32e174",
  "lastMigration": 27,
  "name": "Demo2 API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "303bca52-3a85-4563-b00f-b10e77c38edb",
      "type": "crud",
      "documentation": "Endpoint performing CRUD operations on a data bucket",
      "method": "",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "02333978-e037-4fbc-9cb6-72471ba7e02f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "go2i",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d330ff7-962a-4d57-b50e-bc5e56bd8db3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "accc73e4-5eb7-46fa-aeb3-cf9e0345d10e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbf5404c-61ca-4c9e-9977-dadcb5957de5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c52a8b1d-540c-49ed-84ed-0cc6d13c9fa2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "961c7b6e-12e0-4ccc-a34d-e5354133f411",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ecda82e-a5b3-4808-b459-0189c19a6443",
      "type": "http",
      "documentation": "Generate random body (JSON, text, CSV, etc) with templating",
      "method": "get",
      "endpoint": "template",
      "responses": [
        {
          "uuid": "cbb1dcf4-63b4-480b-bcd2-41c218623feb",
          "body": "{\n  \"Templating example\": \"For more information about templating, click the blue 'i' above this editor\",\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'datatype.number' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'name.firstName' }}\",\n        \"lastname\": \"{{ faker 'name.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'datatype.number' 5) }}\n            {\n              \"id\": \"{{ faker 'datatype.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ],\n  \"total\": \"{{queryParam 'total' '10'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Creates 10 random users, or the amount specified in the 'total' query param",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6063935a-200c-4ce5-8e70-ecfa67b2bb2f",
      "type": "http",
      "documentation": "Use multiple responses with rules",
      "method": "post",
      "endpoint": "content/:param1",
      "responses": [
        {
          "uuid": "8c42bfb3-1476-41e3-9617-be8dd5bfc128",
          "body": "{\n  \"Rules example\": \"Default response. Served if route param 'param1' is not present.\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Default response",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9bfc9bbe-0daf-4af5-bff0-5ff721e10523",
          "body": "{\n  \"Rules example\": \"Content XYZ. Served if route param 'param1' equals 'xyz'. (See in 'Rules' tab)\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Content XYZ",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "param1",
              "value": "xyz",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67b95d21-f1d5-46f1-9f2e-ae668506f013",
          "body": "{\n  \"Rules example\": \"Content not found. Served if route param 'param1' is not equal to 'xyz'. (See in 'Rules' tab)\"\n}\n",
          "latency": 0,
          "statusCode": 404,
          "label": "Content not found",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "param1",
              "value": "^(?!.*xyz).*$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd9be533-3782-41d1-b53c-dd5bb638bda7",
      "type": "http",
      "documentation": "Serve a file dynamically depending on the path param 'pageName'.",
      "method": "get",
      "endpoint": "file/:pageName",
      "responses": [
        {
          "uuid": "4dfbf9c2-d89f-401f-a0e1-8345503ce9af",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Templating is also supported in file path",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "./page{{urlParam 'pageName'}}.html",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b605d420-0a97-4613-a56e-a8389fb87c36",
      "type": "http",
      "documentation": "Path supports various patterns",
      "method": "put",
      "endpoint": "path/with/pattern(s)?/*",
      "responses": [
        {
          "uuid": "6f0e017d-8ad6-460c-9a15-217dd41c7f3e",
          "body": "The current path will match the following routes: \nhttp://localhost:3000/path/with/pattern/\nhttp://localhost:3000/path/with/patterns/\nhttp://localhost:3000/path/with/patterns/anything-else\n\nLearn more about Mockoon's routing: https://mockoon.com/docs/latest/routing",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3fac6745-813e-409c-9b33-51c0c10662e4",
      "type": "http",
      "documentation": "Can Mockoon forward or record entering requests?",
      "method": "get",
      "endpoint": "forward-and-record",
      "responses": [
        {
          "uuid": "9f93e1ee-796d-46c8-b164-bd4cb5203b36",
          "body": "Mockoon can also act as a proxy and forward all entering requests that are not caught by declared routes. \nYou can activate this option in the environment settings ('cog' icon in the upper right corner). \nTo learn more: https://mockoon.com/docs/latest/proxy-mode\n\nAs always, all entering requests, and responses from the proxied server will be recorded ('clock' icon in the upper right corner).\nTo learn more: https://mockoon.com/docs/latest/requests-logging",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "920195e3-a81c-43cd-a601-7c7c754f63ff",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "Examples",
      "responses": [
        {
          "uuid": "6148a7cc-b364-4518-aa48-f8a7e79c6360",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "go2i",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfc654c5-9427-411b-b4bf-b4e03f71c96c",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "passengers",
      "responses": [
        {
          "uuid": "8b8543ff-2139-484f-be64-86014dd737ed",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "247a",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "187a92e9-f2ed-4bad-a750-d33cede884e6",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "bookings",
      "responses": [
        {
          "uuid": "31090b5d-9495-4edb-a4a9-e464019eb13c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "evt7",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ca493fc-ca42-48c7-bbc3-b09ffe9c5a4b",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "patients",
      "responses": [
        {
          "uuid": "d5dfbda6-8f3f-4c7f-b948-a335819381e0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "4aoc",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50924a94-6c5d-4d57-a61b-0f775482e7b5",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "treatments",
      "responses": [
        {
          "uuid": "a8ea1780-62f3-44d4-a95f-889d17b79df5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "0qeb",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "303bca52-3a85-4563-b00f-b10e77c38edb"
    },
    {
      "type": "route",
      "uuid": "7ecda82e-a5b3-4808-b459-0189c19a6443"
    },
    {
      "type": "route",
      "uuid": "6063935a-200c-4ce5-8e70-ecfa67b2bb2f"
    },
    {
      "type": "route",
      "uuid": "dd9be533-3782-41d1-b53c-dd5bb638bda7"
    },
    {
      "type": "route",
      "uuid": "b605d420-0a97-4613-a56e-a8389fb87c36"
    },
    {
      "type": "route",
      "uuid": "3fac6745-813e-409c-9b33-51c0c10662e4"
    },
    {
      "type": "route",
      "uuid": "920195e3-a81c-43cd-a601-7c7c754f63ff"
    },
    {
      "type": "route",
      "uuid": "cfc654c5-9427-411b-b4bf-b4e03f71c96c"
    },
    {
      "type": "route",
      "uuid": "187a92e9-f2ed-4bad-a750-d33cede884e6"
    },
    {
      "type": "route",
      "uuid": "6ca493fc-ca42-48c7-bbc3-b09ffe9c5a4b"
    },
    {
      "type": "route",
      "uuid": "50924a94-6c5d-4d57-a61b-0f775482e7b5"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [
    {
      "uuid": "8284af03-6808-4c6c-986f-6d364c62d290",
      "id": "go2i",
      "name": "Users",
      "documentation": "",
      "value": "[\n  {{#repeat 50}}\n  {\n    \"id\": \"{{faker 'datatype.uuid'}}\",\n    \"username\": \"{{faker 'internet.userName'}}\"\n  }\n  {{/repeat}}\n]"
    },
    {
      "uuid": "ff653aa7-05ff-4b18-aa95-1d2b92981204",
      "id": "247a",
      "name": "Passengers",
      "documentation": "",
      "value": "[\n  {{#repeat 10}}\n  {\n      \"passengerid\":  \"{{@index}}\",\n      \"name\": \"{{faker 'internet.userName'}}\",\n      \"age\": {{faker 'datatype.number' min=2 max=75}},\n      \"gender\": \"{{faker 'name.sex'}}\",\n      \"dateofbirth\": \"{{date '1975-11-20' '2000-11-25' 'dd-MM-yyyy'}}\"\n  }\n  {{/repeat}}\n]"
    },
    {
      "uuid": "87a647dc-2832-4d9e-9537-67ccf7669d2e",
      "id": "4aoc",
      "name": "Patients",
      "documentation": "",
      "value": "[\n  {{#repeat 10}}\n  {\n      \"patientid\":  \"{{@index}}\",\n      \"name\": \"{{faker 'internet.userName'}}\",\n      \"age\": {{faker 'datatype.number' min=2 max=75}},\n      \"gender\": \"{{faker 'name.sex'}}\",\n      \"dateofadmission\": \"{{date '1975-11-20' '2000-11-25' 'dd-MM-yyyy'}}\"\n  }\n  {{/repeat}}\n]"
    },
    {
      "uuid": "f7140ab9-c64d-4796-939a-4de1af3ca501",
      "id": "evt7",
      "name": "Bookings",
      "documentation": "",
      "value": "[\n  {{#repeat 40}}\n  {\n    \"bookingid\": \"{{faker 'datatype.uuid'}}\",\n    \"passengerid\": \"{{faker 'datatype.number' min=1 max=5}}\",\n    \"origincity\":  \"{{faker 'address.cityName'}}\",\n    \"destinationcity\": \"{{faker 'address.cityName'}}\",\n    \"distance\":{{faker 'datatype.number' min=100 max=5000}},\n    \"price\": {{faker 'datatype.number' min=200 max=500}},\n    \"dateofjourney\":  \"{{date '2023-3-20' '2023-3-25' 'dd-MM-yyyy'}}\"\n  }\n  {{/repeat}}\n]"
    },
    {
      "uuid": "0234146e-ee24-4a12-a0e3-d5c3df7fedfc",
      "id": "0qeb",
      "name": "Treatments",
      "documentation": "",
      "value": "[\n  {{#repeat 40}}\n  {\n    \"treatmentid\": \"{{faker 'datatype.uuid'}}\",\n    \"patientid\": \"{{faker 'datatype.number' min=1 max=5}}\",\n    \"diagnosis\":  \"{{faker 'address.cityName'}}\",\n    \"treatment\": \"{{faker 'address.cityName'}}\",\n    \"price\": {{faker 'datatype.number' min=200 max=500}},\n    \"dateoftreatment\":  \"{{date '2023-3-20' '2023-3-25' 'dd-MM-yyyy'}}\"\n  }\n  {{/repeat}}\n]"
    }
  ]
}